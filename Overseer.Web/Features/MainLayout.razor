@using Overseer.Web.Services
@inherits LayoutComponentBase
@inject ThemeService ThemeService
@inject IJSRuntime JSRuntime

<div class="h-screen flex flex-col">
    <nav class="navbar">
        <div class="container mx-auto">
            <div class="flex-1">
                <a href="/" class="btn btn-ghost hover:bg-base-200 normal-case text-2xl font-bold">Overseer</a>
            </div>
            <div class="flex-none">
                <div class="ml-4 flex items-center">
                    <div class="dropdown dropdown-end">
                        <label tabindex="0" class="btn btn-ghost btn-circle hover:bg-base-200 transition-colors duration-200">
                            <i class="fas fa-palette text-lg"></i>
                        </label>
                        <ul tabindex="0" class="menu menu-compact dropdown-content mt-3 p-2 shadow bg-base-200 rounded-box w-52 z-50">
                            @foreach (var theme in new[] { "light", "dark" })
                            {
                                <li>
                                    <button @onclick="() => ChangeThemeAsync(theme)" 
                                            class="w-full text-left capitalize hover:bg-base-300 transition-colors duration-200 @(CurrentTheme == theme ? "font-bold" : "")">
                                        @theme
                                    </button>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </nav>

    <main class="flex-grow overflow-y-auto">
        @Body
    </main>

    <footer class="footer footer-center p-4 text-base-content">
        <div>
            <p>Copyright © 2024 - All rights reserved by Overseer</p>
        </div>
    </footer>
</div>

@code {
    private string CurrentTheme { get; set; } = "light";

    protected override async Task OnInitializedAsync()
    {
        CurrentTheme = await ThemeService.GetThemeAsync();
        await JSRuntime.InvokeVoidAsync("document.documentElement.setAttribute", "data-theme", CurrentTheme);
        ThemeService.OnThemeChanged += StateHasChanged;
    }

    private async Task ChangeThemeAsync(string newTheme)
    {
        await ThemeService.SetThemeAsync(newTheme);
        CurrentTheme = newTheme;
    }

    public void Dispose()
    {
        ThemeService.OnThemeChanged -= StateHasChanged;
    }
}