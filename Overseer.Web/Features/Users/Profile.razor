@page "/profile"

@using Overseer.Web.Clients
@using Overseer.Web.Models.Users

@inject IUsersClient UsersClient
@inject ToastService ToastService

<PageTitle>Overseer - Profile</PageTitle>

<div class="p-8">
    <div>
        <EditForm Model="@updateRequest" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <div class="flex items-center mb-8">
                <div class="w-24 h-24 shadow rounded bg-green-400 flex items-center justify-center text-white text-6xl font-bold">
                    @GetUserInitials()
                </div>
                <div class="ml-6">
                    <h2 class="text-2xl font-semibold text-white">@profile?.FirstName @profile?.LastName</h2>
                    <p class="text-sm text-white/50">@profile?.Email</p>
                </div>
            </div>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div class="col-span-1 md:col-span-2">
                    <label class="block text-sm font-medium text-white/50">ID</label>
                    <p class="mt-1 text-sm text-white p-2 rounded shadow border border-white/25">@profile?.Id</p>
                </div>
                <div class="col-span-1 md:col-span-1">
                    <label class="block text-sm font-medium text-white/50">Email</label>
                    <p class="mt-1 text-sm text-white p-2 rounded shadow border border-white/25">@profile?.Email</p>
                </div>
                <div class="col-span-1 md:col-span-1">
                    <label class="block text-sm font-medium text-white/50">Username</label>
                    <p class="mt-1 text-sm text-white p-2 rounded shadow border border-white/25">@profile?.Username</p>
                </div>
                <div class="col-span-1 md:col-span-1">
                    <label for="firstName" class="block text-sm font-medium text-white/50">First Name</label>
                    <InputText id="firstName" @bind-Value="updateRequest.FirstName" class="mt-1 block w-full border border-white/25 hover:border-white/50 text-sm text-white bg-background p-2 rounded shadow" />
                    <ValidationMessage For="@(() => updateRequest.FirstName)" />
                </div>
                <div class="col-span-1 md:col-span-1">
                    <label for="lastName" class="block text-sm font-medium text-white/50">Last Name</label>
                    <InputText id="lastName" @bind-Value="updateRequest.LastName" class="mt-1 block w-full border border-white/25 hover:border-white/50 text-sm text-white bg-background p-2 rounded shadow" />
                    <ValidationMessage For="@(() => updateRequest.LastName)" />
                </div>
            </div>
        </EditForm>
        <div class="mt-8">
            <button @onclick="HandleValidSubmit" class="bg-green-400 hover:bg-green-500 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline transition duration-300 ease-in-out">
                Update
            </button>
            <button @onclick="Reset" class="border border-white/25 hover:border-white/50 shadow font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline transition duration-300 ease-in-out">
                Reset
            </button>
        </div>
    </div>
</div>

@code {
    private ProfileResponse? profile;
    private UpdateUserRequest updateRequest = new() { FirstName = string.Empty, LastName = string.Empty };

    protected override async Task OnInitializedAsync()
    {
        try
        {
            profile = await UsersClient.GetProfile();
            updateRequest.FirstName = profile.FirstName;
            updateRequest.LastName = profile.LastName;
        }
        catch (Exception ex)
        {
            await ToastService.Show("Error", "Failed to load profile", Toast.ToastType.Error);
            Console.WriteLine(ex);
        }
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            profile = await UsersClient.UpdateProfile(updateRequest);
            await ToastService.Show("Success", "Profile updated successfully", Toast.ToastType.Success);
        }
        catch (Exception ex)
        {
            await ToastService.Show("Error", "Failed to update profile", Toast.ToastType.Error);
            Console.WriteLine(ex);
        }
    }

    private void Reset()
    {
        updateRequest.FirstName = profile?.FirstName ?? string.Empty;
        updateRequest.LastName = profile?.LastName ?? string.Empty;
    }

    private string GetUserInitials()
    {
        return $"{profile?.FirstName[0]}{profile?.LastName[0]}".ToUpper();
    }
}