@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using Overseer.Web.Clients

@inject ThemeService ThemeService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ILocalStorageService LocalStorage
@inject IUsersClient UsersClient

<nav>
    <div class="container mx-auto">
        <div class="flex justify-between items-center py-2">
            <div class="flex items-center space-x-2">
                <a href="/" class="flex items-center group">
                    <img src="images/overseer_logo.svg" alt="Overseer Logo" class="h-12 w-12 mr-2 transition-transform duration-300 ease-in-out transform group-hover:rotate-6 group-hover:scale-125" />
                </a>
            </div>

            <div class="hidden md:flex justify-between items-center space-x-2">
                <a href="/" class="group w-12 h-12 bg-light-surface dark:bg-dark-surface hover:bg-gradient-to-br hover:from-accent hover:to-primary shadow-md rounded flex items-center justify-center">
                    <i class="fas fa-home text-xl text-black dark:text-white group-hover:text-white"></i>
                </a>
                <a href="/customers" class="group w-12 h-12 bg-light-surface dark:bg-dark-surface hover:bg-gradient-to-br hover:from-accent hover:to-primary shadow-md rounded flex items-center justify-center">
                    <i class="fas fa-users text-xl text-black dark:text-white group-hover:text-white"></i>
                </a>
                <a href="/products" class="group w-12 h-12 bg-light-surface dark:bg-dark-surface hover:bg-gradient-to-br hover:from-accent hover:to-primary shadow-md rounded flex items-center justify-center">
                    <i class="fas fa-box text-xl text-black dark:text-white group-hover:text-white"></i>
                </a>
                <a href="/orders" class="group w-12 h-12 bg-light-surface dark:bg-dark-surface hover:bg-gradient-to-br hover:from-accent hover:to-primary shadow-md rounded flex items-center justify-center">
                    <i class="fas fa-shopping-cart text-xl text-black dark:text-white group-hover:text-white"></i>
                </a>
                <a href="/invoices" class="group w-12 h-12 bg-light-surface dark:bg-dark-surface hover:bg-gradient-to-br hover:from-accent hover:to-primary shadow-md rounded flex items-center justify-center">
                    <i class="fas fa-file-invoice text-xl text-black dark:text-white group-hover:text-white"></i>
                </a>
            </div>
            
            <div class="flex items-center space-x-2">
                <button class="group w-12 h-12 bg-light-surface dark:bg-dark-surface hover:bg-gradient-to-br hover:from-accent hover:to-primary shadow-md rounded flex items-center justify-center">
                    <i class="fas fa-bell text-xl text-black dark:text-white group-hover:text-white"></i>
                </button>
                <button @onclick="ToggleTheme" class="group flex items-center w-12 h-12 bg-light-surface dark:bg-dark-surface hover:bg-gradient-to-br hover:from-accent hover:to-primary shadow-md rounded justify-center">
                    @if (!ThemeService.IsDarkMode)
                    {
                        <i class="fas fa-moon text-xl text-black dark:text-white group-hover:text-white"></i>
                    }
                    else
                    {
                        <i class="fas fa-sun text-xl text-black dark:text-white group-hover:text-white"></i>
                    }
                </button>
                <div class="relative hidden md:block">
                    <AuthorizeView>
                        <Authorized>
                            <button @onclick="ToggleUserDropdown" class="group w-12 h-12 bg-light-surface dark:bg-dark-surface hover:bg-gradient-to-br hover:from-accent hover:to-primary shadow-md rounded flex items-center justify-center" aria-expanded="@isUserDropdownOpen" aria-haspopup="true">
                                <i class="fas fa-user text-xl text-black dark:text-white group-hover:text-white"></i>
                            </button>
                            @if (isUserDropdownOpen)
                            {
                            <div class="absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-light-foreground dark:bg-dark-foreground text-black dark:text-white ring-1 ring-black ring-opacity-5 z-50">
                                <a href="/profile" class="group flex flex-col px-4 py-4 hover:bg-gray-100 hover:rounded-t-md hover:text-black">
                                    <div class="flex items-center">
                                        <div class="w-8 h-8 shadow rounded-full bg-gradient-to-br from-accent to-primary flex items-center justify-center text-white font-bold">
                                            @GetUserInitials(context.User)
                                        </div>
                                        <div class="ml-4 flex flex-col">
                                            <div class="text-sm font-semibold text-black dark:text-white group-hover:text-black">
                                                <span>@(firstName.Length > 10 ? firstName[..10] + "..." : firstName)</span>
                                                <span class="@(firstName.Length + lastName.Length > 20 ? "block" : "")">@(lastName.Length > 10 ? lastName[..10] + "..." : lastName)</span>
                                            </div>
                                            <span class="text-xs text-gray-600 dark:text-gray-400 group-hover:text-black">@(email.Length > 20 ? email[..20] + "..." : email)</span>
                                        </div>
                                    </div>
                                </a>
                                <div class="border-t border-gray-500 dark:border-gray-500"></div>
                                <div role="menu" aria-orientation="vertical" aria-labelledby="options-menu">
                                    <a href="/organisation" class="block px-4 py-2 text-sm hover:bg-gray-100 hover:text-black" role="menuitem">
                                        <i class="fas fa-building mr-2"></i>Organisation
                                    </a>
                                    <a href="/settings" class="block px-4 py-2 text-sm hover:bg-gray-100 hover:text-black" role="menuitem">
                                        <i class="fas fa-cog mr-2"></i>Settings
                                    </a>
                                    <button @onclick="Logout" class="block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 hover:text-black hover:rounded-b-md" role="menuitem">
                                        <i class="fas fa-sign-out-alt mr-2"></i>Logout
                                    </button>
                                </div>
                            </div>
                            }
                        </Authorized>
                    </AuthorizeView>
                </div>
                <div class="md:hidden">
                    <button @onclick="ToggleHamburgerMenu" class="group w-12 h-12 bg-light-surface dark:bg-dark-surface hover:bg-gradient-to-br hover:from-accent hover:to-primary shadow-md rounded flex items-center justify-center">
                        <i class="fas fa-bars text-xl text-black dark:text-white group-hover:text-white"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
</nav>

@if (isHamburgerMenuOpen)
{
    <div class="md:hidden fixed inset-0 z-50 bg-light-background dark:bg-dark-background">
        <div class="flex flex-col items-center justify-center h-full">
            <button @onclick="ToggleHamburgerMenu" class="absolute top-8 right-12 text-2xl">
                <i class="fas fa-times hover:bg-gradient-to-br hover:from-accent hover:to-primary hover:text-transparent hover:bg-clip-text transition-colors duration-300"></i>
            </button>
            <a href="/" @onclick="ToggleHamburgerMenu" class="py-2 text-xl hover:bg-gradient-to-br hover:from-accent hover:to-primary hover:text-transparent hover:bg-clip-text transition-colors duration-300">Home</a>
            <a href="/customers" @onclick="ToggleHamburgerMenu" class="py-2 text-xl hover:bg-gradient-to-br hover:from-accent hover:to-primary hover:text-transparent hover:bg-clip-text transition-colors duration-300">Customers</a>
            <a href="/products" @onclick="ToggleHamburgerMenu" class="py-2 text-xl hover:bg-gradient-to-br hover:from-accent hover:to-primary hover:text-transparent hover:bg-clip-text transition-colors duration-300">Products</a>
            <a href="/orders" @onclick="ToggleHamburgerMenu" class="py-2 text-xl hover:bg-gradient-to-br hover:from-accent hover:to-primary hover:text-transparent hover:bg-clip-text transition-colors duration-300">Orders</a>
            <a href="/invoices" @onclick="ToggleHamburgerMenu" class="py-2 text-xl hover:bg-gradient-to-br hover:from-accent hover:to-primary hover:text-transparent hover:bg-clip-text transition-colors duration-300">Invoices</a>
            <a href="/profile" @onclick="ToggleHamburgerMenu" class="py-2 text-xl hover:bg-gradient-to-br hover:from-accent hover:to-primary hover:text-transparent hover:bg-clip-text transition-colors duration-300">Profile</a>
            <a href="/settings" @onclick="ToggleHamburgerMenu" class="py-2 text-xl hover:bg-gradient-to-br hover:from-accent hover:to-primary hover:text-transparent hover:bg-clip-text transition-colors duration-300">Settings</a>
            <button @onclick="Logout" class="py-2 text-xl hover:bg-gradient-to-br hover:from-accent hover:to-primary hover:text-transparent hover:bg-clip-text transition-colors duration-300">Logout</button>
        </div>
    </div>
}

@code {
    private bool isUserDropdownOpen = false;
    private bool isHamburgerMenuOpen = false;

    private string firstName = "";
    private string lastName = "";

    private string email = "";

    protected override async Task OnInitializedAsync()
    {
        await ThemeService.GetThemeAsync();

        var profile = await UsersClient.GetProfile();
        
        firstName = profile.FirstName;
        lastName = profile.LastName;
        email = profile.Email;
    }

    private async Task ToggleTheme()
    {
        await ThemeService.ToggleThemeAsync();
        StateHasChanged();
    }

    private void ToggleUserDropdown()
    {
        isUserDropdownOpen = !isUserDropdownOpen;
    }

    private void ToggleHamburgerMenu()
    {
        isHamburgerMenuOpen = !isHamburgerMenuOpen;
    }

    private string GetUserInitials(ClaimsPrincipal user)
    {
        return $"{firstName[0]}{lastName[0]}".ToUpper();
    }

    private async Task Logout()
    {
        await LocalStorage.RemoveItemAsync("accessToken");
        await LocalStorage.RemoveItemAsync("refreshToken");
        
        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        
        NavigationManager.NavigateTo("/");
    }
}